projectName: atlas
default:
  annotations:
    all:
      app: integration
  labels:
    all:
      "app.kubernetes.io/part-of": integration
  image:
    repository: "183295448290.dkr.ecr.ap-south-1.amazonaws.com/atlas/integration"
    tag: 0.0.0
  resources:
    requests:
      cpu: 0.25
      memory: 256Mi
    limits:
      memory: 2048Mi
  externalSecrets:
    injection:
      secrets:
        - secretName: env
          dataFrom:
            secretKey: app/integration
          refreshInterval: 30s
          secretStoreName: aws-secret-manager

deployments:
  - fullnameOverride: integrations
    serviceAccount:
      create: true
      annotations:
        eks.amazonaws.com/role-arn: "arn:aws:iam::183295448290:role/atlas-api-server-role"
    service:
      type: ClusterIP
      ports:
        - port: 3000
          name: api
          ingress:
            enabled: true
            annotations:
               kubernetes.io/ingress.class: alb
               alb.ingress.kubernetes.io/group.name: atlas
               alb.ingress.kubernetes.io/scheme: internal
               alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80},{"HTTPS": 443}]'
               alb.ingress.kubernetes.io/ssl-redirect: '443'
               alb.ingress.kubernetes.io/healthcheck-path: /health
               alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '15'
               alb.ingress.kubernetes.io/healthcheck-interval-seconds: '300'
               alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-south-1:183295448290:certificate/9935b050-cc72-465d-9afa-9975803f6a3f
            rules:
            - host: integrations.dev.kreditmind.com
              http:
                paths:
                  - path: /*
                    pathType: ImplementationSpecific
                    backend:
                      service:
                        name: integrations
                        port:
                          number: 80
    containers:
      - fullnameOverride: integrations
        port: 8000
        imagePullPolicy: Always
        env:
          APP_MODE: "web"
          FLASK_ENV: "uat"
        resources:
          requests:
            memory: 128Mi
          limits:
            memory: 1024Mi
        healthcheck:
          enabled: true
          livenessProbe:
            path: "/health"
            initialDelaySeconds: 10
            periodSeconds: 20
          readinessProbe:
            path: "/health"
            initialDelaySeconds: 10
            periodSeconds: 20
  
  - fullnameOverride: integrations-worker-callback-worker
    serviceAccount:
      create: true
      annotations:
        eks.amazonaws.com/role-arn: "arn:aws:iam::183295448290:role/atlas-api-server-role"
    containers:
      - fullnameOverride: integrations-worker-callback-worker
        imagePullPolicy: Always
        env:
          APP_MODE: "worker"
          FLASK_ENV: "uat"
          CELERY_QUEUES: "uat-callback,uat-callback-failure"
          CELERY_CONCURRENCY: "5"
          CELERY_LOGLEVEL: "info"
        resources:
          requests:
            memory: 128Mi
          limits:
            memory: 1024Mi
  - fullnameOverride: integrations-worker-chat-notification-batch
    serviceAccount:
      create: true
      annotations:
        eks.amazonaws.com/role-arn: "arn:aws:iam::183295448290:role/atlas-api-server-role"
    containers:
      - fullnameOverride: integrations-worker-chat-notification-batch
        imagePullPolicy: Always
        env:
          APP_MODE: "worker"
          FLASK_ENV: "uat"
          CELERY_QUEUES: "uat-chat-notification-batch"
          CELERY_CONCURRENCY: "5"
          CELERY_LOGLEVEL: "info"
        resources:
          requests:
            memory: 128Mi
          limits:
            memory: 1024Mi
  - fullnameOverride: integrations-worker-chat-notification
    serviceAccount:
      create: true
      annotations:
        eks.amazonaws.com/role-arn: "arn:aws:iam::183295448290:role/atlas-api-server-role"
    containers:
      - fullnameOverride: integrations-worker-chat-notification
        imagePullPolicy: Always
        env:
          APP_MODE: "worker"
          FLASK_ENV: "uat"
          CELERY_QUEUES: "uat-chat-notification"
          CELERY_CONCURRENCY: "5"
          CELERY_LOGLEVEL: "info"
        resources:
          requests:
            memory: 128Mi
          limits:
            memory: 1024Mi
  - fullnameOverride: integrations-worker-chat-post-proccessing
    serviceAccount:
      create: true
      annotations:
        eks.amazonaws.com/role-arn: "arn:aws:iam::183295448290:role/atlas-api-server-role"
    containers:
      - fullnameOverride: integrations-worker-chat-post-proccessing
        imagePullPolicy: Always
        env:
          APP_MODE: "worker"
          FLASK_ENV: "uat"
          CELERY_QUEUES: "uat-chat-post-proccessing"
          CELERY_CONCURRENCY: "5"
          CELERY_LOGLEVEL: "info"
        resources:
          requests:
            memory: 128Mi
          limits:
            memory: 1024Mi
  - fullnameOverride: integrations-worker-llm-service
    serviceAccount:
      create: true
      annotations:
        eks.amazonaws.com/role-arn: "arn:aws:iam::183295448290:role/atlas-api-server-role"
    containers:
      - fullnameOverride: llm-service
        imagePullPolicy: Always
        env:
          APP_MODE: "worker"
          FLASK_ENV: "uat"
          CELERY_QUEUES: "uat-llm-service"
          CELERY_CONCURRENCY: "5"
          CELERY_LOGLEVEL: "info"
        resources:
          requests:
            memory: 128Mi
          limits:
            memory: 1024Mi
  - fullnameOverride: integrations-worker-file-validation
    serviceAccount:
      create: true
      annotations:
        eks.amazonaws.com/role-arn: "arn:aws:iam::183295448290:role/atlas-api-server-role"
    containers:
      - fullnameOverride: post_llm_worker
        imagePullPolicy: Always
        env:
          APP_MODE: "worker"
          FLASK_ENV: "uat"
          CELERY_QUEUES: "uat-file-validation,uat-urls-result"
          CELERY_CONCURRENCY: "5"
          CELERY_LOGLEVEL: "info"
# jobs:
#   - name: dbmigrate-job # required  
#     excludeSecretsFromDefault: true
#     serviceAccount:
#       create: false
#     annotations:
#       argocd.argoproj.io/hook: PreSync
#     containers:
#       - name: "dbmigrate-job" #required
#         env:
#           APP_MODE: "migration"
#         secrets:
#           injection:
#             - server-dbmigrate-env
#         resources:
#           requests:
#             memory: 512Mi
#           limits:
#             memory: 512Mi
